// <auto-generated />
using FeedbackApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FeedbackApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250717134554_AddFeedbackChanges")]
    partial class AddFeedbackChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("FeedbackApp.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CooperationLevel")
                        .HasColumnType("INTEGER");

                    b.Property<double>("LearningTime")
                        .HasColumnType("REAL");

                    b.Property<int>("ProblemAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StressLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TasksFinished")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeeklySummary")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkSatisfaction")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Workdifficulty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Workload")
                        .HasColumnType("INTEGER");

                    b.HasKey("FeedbackID");

                    b.HasIndex("UserID");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("FeedbackApp.Models.Task", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Completionpercentage")
                        .HasColumnType("REAL");

                    b.Property<int?>("FeedbackID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("HoursSpent")
                        .HasColumnType("REAL");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tasktitle")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskID");

                    b.HasIndex("FeedbackID");

                    b.HasIndex("UserID");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("FeedbackApp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FeedbackApp.Models.Feedback", b =>
                {
                    b.HasOne("FeedbackApp.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FeedbackApp.Models.Task", b =>
                {
                    b.HasOne("FeedbackApp.Models.Feedback", "Feedback")
                        .WithMany("Tasks")
                        .HasForeignKey("FeedbackID");

                    b.HasOne("FeedbackApp.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserID");

                    b.Navigation("Feedback");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FeedbackApp.Models.Feedback", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("FeedbackApp.Models.User", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
